// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationSystem.WebApi.Data;

#nullable disable

namespace ReservationSystem.WebApi.Migrations
{
    [DbContext(typeof(ReservationSystemDbContext))]
    [Migration("20240223162932_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservationSystem.WebApi.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Parking",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Desk",
                            Status = 0
                        });
                });

            modelBuilder.Entity("ReservationSystem.WebApi.Models.LocationSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationSpots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            Name = "A1",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 1,
                            Name = "A2",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 1,
                            Name = "A3",
                            Status = 3
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 1,
                            Name = "B1",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            LocationId = 1,
                            Name = "B2",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            LocationId = 2,
                            Name = "Python",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            LocationId = 2,
                            Name = "PHP",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            LocationId = 2,
                            Name = "C#",
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            LocationId = 2,
                            Name = "Java",
                            Status = 3
                        });
                });

            modelBuilder.Entity("ReservationSystem.WebApi.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LocationSpotId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationSpotId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationSpotId = 1,
                            ReservationEnd = new DateTime(2023, 1, 1, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            ReservationStart = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            LocationSpotId = 2,
                            ReservationEnd = new DateTime(2023, 5, 24, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStart = new DateTime(2023, 5, 2, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            LocationSpotId = 2,
                            ReservationEnd = new DateTime(2023, 5, 30, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStart = new DateTime(2023, 5, 10, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            LocationSpotId = 4,
                            ReservationEnd = new DateTime(2023, 12, 22, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStart = new DateTime(2023, 12, 18, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            LocationSpotId = 1,
                            ReservationEnd = new DateTime(2023, 12, 29, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStart = new DateTime(2023, 12, 29, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            LocationSpotId = 1,
                            ReservationEnd = new DateTime(2023, 12, 28, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStart = new DateTime(2023, 12, 26, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            LocationSpotId = 8,
                            ReservationEnd = new DateTime(2023, 12, 29, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationStart = new DateTime(2023, 11, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ReservationSystem.WebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarRegistrationPlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryAbbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rukolos g. 12-2, Kaunas",
                            CarRegistrationPlate = "AMU111",
                            CountryAbbreviation = "LT",
                            Email = "jonas.jonaitis@gmail.com",
                            Name = "Jonas",
                            PersonalCode = "43614578542",
                            Phone = "86-878-4596",
                            Status = 0,
                            Surname = "Jonaitis"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Kalpoko g. 3, Kaunas",
                            CountryAbbreviation = "LT",
                            Name = "Rima",
                            PersonalCode = "49547578542",
                            Phone = "37068784596",
                            Status = 0,
                            Surname = "Ramune"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Suur-Ameerika 1, Tallinn",
                            CarRegistrationPlate = "441AUI",
                            CountryAbbreviation = "EE",
                            Email = "bob.marley@gmail.com",
                            Name = "Bob",
                            PersonalCode = "38254789564",
                            Phone = "+372 799 2222",
                            Status = 0,
                            Surname = "Marley"
                        });
                });

            modelBuilder.Entity("ReservationSystem.WebApi.Models.LocationSpot", b =>
                {
                    b.HasOne("ReservationSystem.WebApi.Models.Location", "Location")
                        .WithMany("LocationSpots")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ReservationSystem.WebApi.Models.Reservation", b =>
                {
                    b.HasOne("ReservationSystem.WebApi.Models.LocationSpot", "LocationSpot")
                        .WithMany()
                        .HasForeignKey("LocationSpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationSystem.WebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationSpot");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReservationSystem.WebApi.Models.Location", b =>
                {
                    b.Navigation("LocationSpots");
                });
#pragma warning restore 612, 618
        }
    }
}
